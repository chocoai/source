<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.asset.ding.dao.DingUserDao">
	
	<!-- 查询数据
	<select id="findList" resultType="DingUser">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
    <select id="findList" resultType="DingUser">
        SELECT ${sqlMap.column.toSql()}
        FROM ${sqlMap.table.toSql()}
        <if test="departmentId!= null and departmentId != ''">
            left join js_ding_user_department b on a.userid=b.user_id
            left join js_ding_department c on c.department_id=b.department_id
        </if>
        <if test="specialUser!= null and specialUser != ''">
            INNER JOIN fz_appreciation_type t on a.mobile=t.privilege_phone
        </if>
        <where>
            ${sqlMap.where.toSql()}
            <if test="left!= null and left != ''">
                and a.LEFT=#{left}
            </if>
            <if test="specialUser!= null and specialUser != ''">
                and t.status='0'
            </if>
            <if test="removeId!= null and removeId != ''">
                and a.userid!=#{removeId}
            </if>
            <if test="departmentId!= null and departmentId != ''">
                and (b.department_id=#{departmentId} or c.parent_codes like CONCAT('%,',#{departmentId},',%'))
                group by a.userid
            </if>
        </where>
        ORDER BY ${sqlMap.order.toSql()}
    </select>
	<insert id="insertUserRole">
		INSERT INTO `js_ding_user_role` (`user_id`,`role_id`) VALUES (#{arg0},#{arg1})
	</insert>
	<select id="selectUserRole">
		select count(*) from `js_ding_user_role` where `user_id`=#{arg0} and `role_id`=#{arg1}
	</select>
    <delete id="deleteUserRole">
        delete from `js_ding_user_role` where `user_id`=#{arg0}
    </delete>
    <delete id="deleteUserDepartment">
        delete from `js_ding_user_department` where `user_id`=#{arg0}
    </delete>
    <insert id="insertUserDepartment">
        INSERT INTO `js_ding_user_department` (`user_id`,`department_id`) VALUES (#{arg0},#{arg1})
    </insert>
    <update id="updateLeftStatus">
   update js_ding_user u set u.left='1' where u.userid in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <select id="selectUserCountByDepartment" resultType="DingUser">
        select count(*) from js_ding_user a left join js_ding_user_department b on a.userid=b.user_id
             left join js_ding_department c on c.department_id=b.department_id
             where (b.department_id=#{departmentId} or c.parent_codes like CONCAT('%,',#{departmentId},',%')) and a.left='0'
             group by a.userid
    </select>

    <select id="getDepartName" resultType="com.jeesite.modules.asset.ding.entity.DingDepartment">
    SELECT
	a.name AS departmentName,
        b.user_id AS userId
    FROM
	js_ding_department a
    LEFT JOIN js_ding_user_department b ON a.department_id = b.department_id
        <where>
	b.user_id in
        <foreach collection="list" item="praiser" index="index" open="(" separator="," close=")">
            #{praiser}
        </foreach>
        </where>
    </select>

    <select id="getUserByIds" resultType="com.jeesite.modules.asset.ding.entity.DingUser">
        SELECT
        *
        FROM
        js_ding_user a
        <where>
            a.userid in
            <foreach collection="list" item="userIdList" index="index" open="(" separator="," close=")">
                #{userIdList}
            </foreach>
        </where>
    </select>
    <select id="getNamesByUserIds" resultType="String">
        SELECT
        a.name
        FROM
        js_ding_user a
        <where>
            a.userid in
            <foreach collection="list" item="userIdList" index="index" open="(" separator="," close=")">
                #{userIdList}
            </foreach>
        </where>
    </select>


    <insert id="insertAllUsers" parameterType="java.util.List" keyProperty="userid" useGeneratedKeys="false">
        INSERT INTO js_ding_user
        (userid,
        openid,
        `name`,
        tel,
        work_place,
        remark,
        mobile,
        email,
        org_email,
        active,
        orderin_depts,
        is_admin,
        is_boss,
        unionid,
        is_leader_in_depts,
        is_hide,
        department,
        `position`,
        avatar,
        hired_date,
        jobnumber,
        extattr,
        roleid,
        state_code,
        is_senior,
        convertible_gold,
        in_department_gold,
        out_department_gold,
        `left`,
        winning_prize,
        prize_type,
        achievement,
        user_status,
        user_is_vip,
        is_manager,
        direct_superior,
        department_header,
        used_point,
        freeze_point,
        job_level
        )
        VALUES
        <foreach collection="list" item="user" index="index" separator=",">
            (#{user.userid,jdbcType=VARCHAR},
            #{user.openid,jdbcType=VARCHAR},
            #{user.name,jdbcType=VARCHAR},
            #{user.tel,jdbcType=VARCHAR},
            #{user.workPlace,jdbcType=VARCHAR},
            #{user.remark,jdbcType=VARCHAR},
            #{user.mobile,jdbcType=VARCHAR},
            #{user.email,jdbcType=VARCHAR},
            #{user.orgEmail,jdbcType=VARCHAR},
            #{user.active,jdbcType=VARCHAR},
            #{user.orderinDepts,jdbcType=VARCHAR},
            #{user.isAdmin,jdbcType=VARCHAR},
            #{user.isBoss,jdbcType=VARCHAR},
            #{user.unionid,jdbcType=VARCHAR},
            #{user.isLeaderInDepts,jdbcType=VARCHAR},
            #{user.isHide,jdbcType=VARCHAR},
            #{user.department,jdbcType=VARCHAR},
            #{user.position,jdbcType=VARCHAR},
            #{user.avatar,jdbcType=VARCHAR},
            #{user.hiredDate},
            #{user.jobnumber,jdbcType=VARCHAR},
            #{user.extattr,jdbcType=VARCHAR},
            #{user.roleid,jdbcType=VARCHAR},
            #{user.stateCode,jdbcType=VARCHAR},
            #{user.isSenior,jdbcType=VARCHAR},
            #{user.convertibleGold,jdbcType=INTEGER},
            #{user.inDepartmentGold,jdbcType=INTEGER},
            #{user.outDepartmentGold,jdbcType=INTEGER},
            #{user.left,jdbcType=VARCHAR},
            #{user.winningPrize,jdbcType=CHAR},
            #{user.prizeType,jdbcType=VARCHAR},
            #{user.achievement,jdbcType=VARCHAR},
            #{user.userStatus,jdbcType=CHAR},
            #{user.userIsVip,jdbcType=CHAR},
            #{user.isManager,jdbcType=CHAR},
            #{user.directSuperior,jdbcType=VARCHAR},
            #{user.departmentHeader,jdbcType=VARCHAR},
            #{user.usedPoint,jdbcType=DOUBLE},
            #{user.freezePoint,jdbcType=DOUBLE},
            #{user.jobLevel,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <update id="updateAllUsers" parameterType="java.util.List">

        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            UPDATE js_ding_user SET
            <if test="item.openid!=null"> openid = #{item.openid,jdbcType=VARCHAR}, </if>
            <if test="item.name!=null"> `name` = #{item.name,jdbcType=VARCHAR}, </if>
            <if test="item.tel!=null"> tel = #{item.tel,jdbcType=VARCHAR}, </if>
            <if test="item.workPlace!=null"> work_place = #{item.workPlace,jdbcType=VARCHAR}, </if>
            <if test="item.remark!=null"> remark = #{item.remark,jdbcType=VARCHAR}, </if>
            <if test="item.mobile!=null"> mobile = #{item.mobile,jdbcType=VARCHAR}, </if>
            <if test="item.email!=null"> email = #{item.email,jdbcType=VARCHAR}, </if>
            <if test="item.orgEmail!=null"> org_email = #{item.orgEmail,jdbcType=VARCHAR}, </if>
            <if test="item.active!=null"> active = #{item.active,jdbcType=VARCHAR}, </if>
            <if test="item.orderinDepts!=null"> orderIn_depts = #{item.orderinDepts,jdbcType=VARCHAR}, </if>
            <if test="item.isAdmin!=null"> is_admin = #{item.isAdmin,jdbcType=VARCHAR}, </if>
            <if test="item.isBoss!=null"> is_boss = #{item.isBoss,jdbcType=VARCHAR}, </if>
            <if test="item.unionid!=null"> unionid = #{item.unionid,jdbcType=VARCHAR}, </if>
            <if test="item.isLeaderInDepts!=null"> is_leader_in_depts = #{item.isLeaderInDepts,jdbcType=VARCHAR}, </if>
            <if test="item.isHide!=null"> is_hide = #{item.isHide,jdbcType=VARCHAR}, </if>
            <if test="item.department!=null"> department = #{item.department,jdbcType=VARCHAR}, </if>
            <if test="item.position!=null"> `position` = #{item.position,jdbcType=VARCHAR}, </if>
            <if test="item.avatar!=null"> avatar = #{item.avatar,jdbcType=VARCHAR}, </if>
            <if test="item.hiredDate!=null"> hired_date = #{item.hiredDate}, </if>
            <if test="item.extattr!=null"> extattr = #{item.extattr,jdbcType=VARCHAR}, </if>
            <if test="item.roleid!=null"> roleid = #{item.roleid,jdbcType=VARCHAR}, </if>
            <if test="item.stateCode!=null"> state_code = #{item.stateCode,jdbcType=VARCHAR}, </if>
            <if test="item.isSenior!=null"> is_senior = #{item.isSenior,jdbcType=VARCHAR}, </if>
            <if test="item.left!=null"> `left` = #{item.left}, </if>
            <if test="item.directSuperior!=null"> direct_superior = #{item.directSuperior}, </if>
            <if test="item.departmentHeader!=null"> department_header = #{item.departmentHeader}, </if>
            `userid` = #{item.userid}
            WHERE `userid` = #{item.userid}
        </foreach>
    </update>

    <delete id="deleteBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            DELETE FROM js_ding_user WHERE `userid` = #{item}
        </foreach>
    </delete>

    <delete id="deleteAllianceUser" parameterType="java.util.List">
        delete from js_ding_user
        where userid in
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>

    </delete>


</mapper>